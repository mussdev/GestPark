//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GestPark.Models.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GestParkDataSetListCar")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GestParkDataSetListCar : global::System.Data.DataSet {
        
        private View_VehiculeDataTable tableView_Vehicule;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public GestParkDataSetListCar() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected GestParkDataSetListCar(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["View_Vehicule"] != null)) {
                    base.Tables.Add(new View_VehiculeDataTable(ds.Tables["View_Vehicule"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_VehiculeDataTable View_Vehicule {
            get {
                return this.tableView_Vehicule;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            GestParkDataSetListCar cln = ((GestParkDataSetListCar)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["View_Vehicule"] != null)) {
                    base.Tables.Add(new View_VehiculeDataTable(ds.Tables["View_Vehicule"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableView_Vehicule = ((View_VehiculeDataTable)(base.Tables["View_Vehicule"]));
            if ((initTable == true)) {
                if ((this.tableView_Vehicule != null)) {
                    this.tableView_Vehicule.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "GestParkDataSetListCar";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GestParkDataSetListCar.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableView_Vehicule = new View_VehiculeDataTable();
            base.Tables.Add(this.tableView_Vehicule);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeView_Vehicule() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GestParkDataSetListCar ds = new GestParkDataSetListCar();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void View_VehiculeRowChangeEventHandler(object sender, View_VehiculeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_VehiculeDataTable : global::System.Data.TypedTableBase<View_VehiculeRow> {
            
            private global::System.Data.DataColumn columnCODE_VEHICULE;
            
            private global::System.Data.DataColumn columnDATE_ACHA_VEHICULE;
            
            private global::System.Data.DataColumn columnDATE_VISITE_VEHICULE;
            
            private global::System.Data.DataColumn columnIMMATRICULATION_VEHICULE;
            
            private global::System.Data.DataColumn columnCARTE_GRISE_VEHICULE;
            
            private global::System.Data.DataColumn columnPRIX_VEHICULE;
            
            private global::System.Data.DataColumn columnTYPEVITESSE_VEHICULE;
            
            private global::System.Data.DataColumn columnTYPE_VEHICULE;
            
            private global::System.Data.DataColumn columnETAT_VEHICULE;
            
            private global::System.Data.DataColumn columnCORDGPS_VEHICULE;
            
            private global::System.Data.DataColumn columnNOTE_VEHICULE;
            
            private global::System.Data.DataColumn columnDATECREATE_VEHICULE;
            
            private global::System.Data.DataColumn columnUSERCREATE_VEHICULE;
            
            private global::System.Data.DataColumn columnASSURANCE_VEHICULE;
            
            private global::System.Data.DataColumn columnSTATUT_VEHICULE;
            
            private global::System.Data.DataColumn columnSANTE_VEHICULE;
            
            private global::System.Data.DataColumn columnTOTALKILOMETRAGE_VEHICULE;
            
            private global::System.Data.DataColumn columnKILOMETRAGE_VIDENGE_VEHICULE;
            
            private global::System.Data.DataColumn columnDATEMISEENSERVICE;
            
            private global::System.Data.DataColumn columnMODELE_MARQ;
            
            private global::System.Data.DataColumn columnDESCRIPTION_MARQ;
            
            private global::System.Data.DataColumn columnDESCRIPTION_TYPCONSO;
            
            private global::System.Data.DataColumn columnDESCRIPTION_FOUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public View_VehiculeDataTable() {
                this.TableName = "View_Vehicule";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal View_VehiculeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected View_VehiculeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODE_VEHICULEColumn {
                get {
                    return this.columnCODE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATE_ACHA_VEHICULEColumn {
                get {
                    return this.columnDATE_ACHA_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATE_VISITE_VEHICULEColumn {
                get {
                    return this.columnDATE_VISITE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IMMATRICULATION_VEHICULEColumn {
                get {
                    return this.columnIMMATRICULATION_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CARTE_GRISE_VEHICULEColumn {
                get {
                    return this.columnCARTE_GRISE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PRIX_VEHICULEColumn {
                get {
                    return this.columnPRIX_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TYPEVITESSE_VEHICULEColumn {
                get {
                    return this.columnTYPEVITESSE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TYPE_VEHICULEColumn {
                get {
                    return this.columnTYPE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ETAT_VEHICULEColumn {
                get {
                    return this.columnETAT_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CORDGPS_VEHICULEColumn {
                get {
                    return this.columnCORDGPS_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOTE_VEHICULEColumn {
                get {
                    return this.columnNOTE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATECREATE_VEHICULEColumn {
                get {
                    return this.columnDATECREATE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn USERCREATE_VEHICULEColumn {
                get {
                    return this.columnUSERCREATE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ASSURANCE_VEHICULEColumn {
                get {
                    return this.columnASSURANCE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn STATUT_VEHICULEColumn {
                get {
                    return this.columnSTATUT_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SANTE_VEHICULEColumn {
                get {
                    return this.columnSANTE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TOTALKILOMETRAGE_VEHICULEColumn {
                get {
                    return this.columnTOTALKILOMETRAGE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KILOMETRAGE_VIDENGE_VEHICULEColumn {
                get {
                    return this.columnKILOMETRAGE_VIDENGE_VEHICULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DATEMISEENSERVICEColumn {
                get {
                    return this.columnDATEMISEENSERVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MODELE_MARQColumn {
                get {
                    return this.columnMODELE_MARQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTION_MARQColumn {
                get {
                    return this.columnDESCRIPTION_MARQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTION_TYPCONSOColumn {
                get {
                    return this.columnDESCRIPTION_TYPCONSO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTION_FOURColumn {
                get {
                    return this.columnDESCRIPTION_FOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public View_VehiculeRow this[int index] {
                get {
                    return ((View_VehiculeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event View_VehiculeRowChangeEventHandler View_VehiculeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event View_VehiculeRowChangeEventHandler View_VehiculeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event View_VehiculeRowChangeEventHandler View_VehiculeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event View_VehiculeRowChangeEventHandler View_VehiculeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddView_VehiculeRow(View_VehiculeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public View_VehiculeRow AddView_VehiculeRow(
                        string CODE_VEHICULE, 
                        System.DateTime DATE_ACHA_VEHICULE, 
                        System.DateTime DATE_VISITE_VEHICULE, 
                        string IMMATRICULATION_VEHICULE, 
                        string CARTE_GRISE_VEHICULE, 
                        decimal PRIX_VEHICULE, 
                        string TYPEVITESSE_VEHICULE, 
                        string TYPE_VEHICULE, 
                        string ETAT_VEHICULE, 
                        string CORDGPS_VEHICULE, 
                        string NOTE_VEHICULE, 
                        System.DateTime DATECREATE_VEHICULE, 
                        string USERCREATE_VEHICULE, 
                        System.DateTime ASSURANCE_VEHICULE, 
                        string STATUT_VEHICULE, 
                        string SANTE_VEHICULE, 
                        decimal TOTALKILOMETRAGE_VEHICULE, 
                        decimal KILOMETRAGE_VIDENGE_VEHICULE, 
                        System.DateTime DATEMISEENSERVICE, 
                        string MODELE_MARQ, 
                        string DESCRIPTION_MARQ, 
                        string DESCRIPTION_TYPCONSO, 
                        string DESCRIPTION_FOUR) {
                View_VehiculeRow rowView_VehiculeRow = ((View_VehiculeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODE_VEHICULE,
                        DATE_ACHA_VEHICULE,
                        DATE_VISITE_VEHICULE,
                        IMMATRICULATION_VEHICULE,
                        CARTE_GRISE_VEHICULE,
                        PRIX_VEHICULE,
                        TYPEVITESSE_VEHICULE,
                        TYPE_VEHICULE,
                        ETAT_VEHICULE,
                        CORDGPS_VEHICULE,
                        NOTE_VEHICULE,
                        DATECREATE_VEHICULE,
                        USERCREATE_VEHICULE,
                        ASSURANCE_VEHICULE,
                        STATUT_VEHICULE,
                        SANTE_VEHICULE,
                        TOTALKILOMETRAGE_VEHICULE,
                        KILOMETRAGE_VIDENGE_VEHICULE,
                        DATEMISEENSERVICE,
                        MODELE_MARQ,
                        DESCRIPTION_MARQ,
                        DESCRIPTION_TYPCONSO,
                        DESCRIPTION_FOUR};
                rowView_VehiculeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_VehiculeRow);
                return rowView_VehiculeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                View_VehiculeDataTable cln = ((View_VehiculeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_VehiculeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCODE_VEHICULE = base.Columns["CODE_VEHICULE"];
                this.columnDATE_ACHA_VEHICULE = base.Columns["DATE_ACHA_VEHICULE"];
                this.columnDATE_VISITE_VEHICULE = base.Columns["DATE_VISITE_VEHICULE"];
                this.columnIMMATRICULATION_VEHICULE = base.Columns["IMMATRICULATION_VEHICULE"];
                this.columnCARTE_GRISE_VEHICULE = base.Columns["CARTE_GRISE_VEHICULE"];
                this.columnPRIX_VEHICULE = base.Columns["PRIX_VEHICULE"];
                this.columnTYPEVITESSE_VEHICULE = base.Columns["TYPEVITESSE_VEHICULE"];
                this.columnTYPE_VEHICULE = base.Columns["TYPE_VEHICULE"];
                this.columnETAT_VEHICULE = base.Columns["ETAT_VEHICULE"];
                this.columnCORDGPS_VEHICULE = base.Columns["CORDGPS_VEHICULE"];
                this.columnNOTE_VEHICULE = base.Columns["NOTE_VEHICULE"];
                this.columnDATECREATE_VEHICULE = base.Columns["DATECREATE_VEHICULE"];
                this.columnUSERCREATE_VEHICULE = base.Columns["USERCREATE_VEHICULE"];
                this.columnASSURANCE_VEHICULE = base.Columns["ASSURANCE_VEHICULE"];
                this.columnSTATUT_VEHICULE = base.Columns["STATUT_VEHICULE"];
                this.columnSANTE_VEHICULE = base.Columns["SANTE_VEHICULE"];
                this.columnTOTALKILOMETRAGE_VEHICULE = base.Columns["TOTALKILOMETRAGE_VEHICULE"];
                this.columnKILOMETRAGE_VIDENGE_VEHICULE = base.Columns["KILOMETRAGE_VIDENGE_VEHICULE"];
                this.columnDATEMISEENSERVICE = base.Columns["DATEMISEENSERVICE"];
                this.columnMODELE_MARQ = base.Columns["MODELE_MARQ"];
                this.columnDESCRIPTION_MARQ = base.Columns["DESCRIPTION_MARQ"];
                this.columnDESCRIPTION_TYPCONSO = base.Columns["DESCRIPTION_TYPCONSO"];
                this.columnDESCRIPTION_FOUR = base.Columns["DESCRIPTION_FOUR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCODE_VEHICULE = new global::System.Data.DataColumn("CODE_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_VEHICULE);
                this.columnDATE_ACHA_VEHICULE = new global::System.Data.DataColumn("DATE_ACHA_VEHICULE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_ACHA_VEHICULE);
                this.columnDATE_VISITE_VEHICULE = new global::System.Data.DataColumn("DATE_VISITE_VEHICULE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_VISITE_VEHICULE);
                this.columnIMMATRICULATION_VEHICULE = new global::System.Data.DataColumn("IMMATRICULATION_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMMATRICULATION_VEHICULE);
                this.columnCARTE_GRISE_VEHICULE = new global::System.Data.DataColumn("CARTE_GRISE_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARTE_GRISE_VEHICULE);
                this.columnPRIX_VEHICULE = new global::System.Data.DataColumn("PRIX_VEHICULE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRIX_VEHICULE);
                this.columnTYPEVITESSE_VEHICULE = new global::System.Data.DataColumn("TYPEVITESSE_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPEVITESSE_VEHICULE);
                this.columnTYPE_VEHICULE = new global::System.Data.DataColumn("TYPE_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_VEHICULE);
                this.columnETAT_VEHICULE = new global::System.Data.DataColumn("ETAT_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETAT_VEHICULE);
                this.columnCORDGPS_VEHICULE = new global::System.Data.DataColumn("CORDGPS_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCORDGPS_VEHICULE);
                this.columnNOTE_VEHICULE = new global::System.Data.DataColumn("NOTE_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE_VEHICULE);
                this.columnDATECREATE_VEHICULE = new global::System.Data.DataColumn("DATECREATE_VEHICULE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATECREATE_VEHICULE);
                this.columnUSERCREATE_VEHICULE = new global::System.Data.DataColumn("USERCREATE_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERCREATE_VEHICULE);
                this.columnASSURANCE_VEHICULE = new global::System.Data.DataColumn("ASSURANCE_VEHICULE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSURANCE_VEHICULE);
                this.columnSTATUT_VEHICULE = new global::System.Data.DataColumn("STATUT_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUT_VEHICULE);
                this.columnSANTE_VEHICULE = new global::System.Data.DataColumn("SANTE_VEHICULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSANTE_VEHICULE);
                this.columnTOTALKILOMETRAGE_VEHICULE = new global::System.Data.DataColumn("TOTALKILOMETRAGE_VEHICULE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTALKILOMETRAGE_VEHICULE);
                this.columnKILOMETRAGE_VIDENGE_VEHICULE = new global::System.Data.DataColumn("KILOMETRAGE_VIDENGE_VEHICULE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKILOMETRAGE_VIDENGE_VEHICULE);
                this.columnDATEMISEENSERVICE = new global::System.Data.DataColumn("DATEMISEENSERVICE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATEMISEENSERVICE);
                this.columnMODELE_MARQ = new global::System.Data.DataColumn("MODELE_MARQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODELE_MARQ);
                this.columnDESCRIPTION_MARQ = new global::System.Data.DataColumn("DESCRIPTION_MARQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION_MARQ);
                this.columnDESCRIPTION_TYPCONSO = new global::System.Data.DataColumn("DESCRIPTION_TYPCONSO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION_TYPCONSO);
                this.columnDESCRIPTION_FOUR = new global::System.Data.DataColumn("DESCRIPTION_FOUR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTION_FOUR);
                this.columnCODE_VEHICULE.AllowDBNull = false;
                this.columnCODE_VEHICULE.MaxLength = 25;
                this.columnDATE_VISITE_VEHICULE.AllowDBNull = false;
                this.columnIMMATRICULATION_VEHICULE.AllowDBNull = false;
                this.columnIMMATRICULATION_VEHICULE.MaxLength = 55;
                this.columnCARTE_GRISE_VEHICULE.AllowDBNull = false;
                this.columnCARTE_GRISE_VEHICULE.MaxLength = 55;
                this.columnPRIX_VEHICULE.AllowDBNull = false;
                this.columnTYPEVITESSE_VEHICULE.AllowDBNull = false;
                this.columnTYPEVITESSE_VEHICULE.MaxLength = 55;
                this.columnTYPE_VEHICULE.AllowDBNull = false;
                this.columnTYPE_VEHICULE.MaxLength = 25;
                this.columnETAT_VEHICULE.MaxLength = 25;
                this.columnCORDGPS_VEHICULE.MaxLength = 55;
                this.columnNOTE_VEHICULE.MaxLength = 2147483647;
                this.columnUSERCREATE_VEHICULE.MaxLength = 55;
                this.columnSTATUT_VEHICULE.MaxLength = 25;
                this.columnSANTE_VEHICULE.MaxLength = 25;
                this.columnMODELE_MARQ.MaxLength = 255;
                this.columnDESCRIPTION_MARQ.AllowDBNull = false;
                this.columnDESCRIPTION_MARQ.MaxLength = 55;
                this.columnDESCRIPTION_TYPCONSO.AllowDBNull = false;
                this.columnDESCRIPTION_TYPCONSO.MaxLength = 55;
                this.columnDESCRIPTION_FOUR.AllowDBNull = false;
                this.columnDESCRIPTION_FOUR.MaxLength = 55;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public View_VehiculeRow NewView_VehiculeRow() {
                return ((View_VehiculeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_VehiculeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(View_VehiculeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_VehiculeRowChanged != null)) {
                    this.View_VehiculeRowChanged(this, new View_VehiculeRowChangeEvent(((View_VehiculeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_VehiculeRowChanging != null)) {
                    this.View_VehiculeRowChanging(this, new View_VehiculeRowChangeEvent(((View_VehiculeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_VehiculeRowDeleted != null)) {
                    this.View_VehiculeRowDeleted(this, new View_VehiculeRowChangeEvent(((View_VehiculeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_VehiculeRowDeleting != null)) {
                    this.View_VehiculeRowDeleting(this, new View_VehiculeRowChangeEvent(((View_VehiculeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveView_VehiculeRow(View_VehiculeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GestParkDataSetListCar ds = new GestParkDataSetListCar();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_VehiculeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class View_VehiculeRow : global::System.Data.DataRow {
            
            private View_VehiculeDataTable tableView_Vehicule;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal View_VehiculeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Vehicule = ((View_VehiculeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE_VEHICULE {
                get {
                    return ((string)(this[this.tableView_Vehicule.CODE_VEHICULEColumn]));
                }
                set {
                    this[this.tableView_Vehicule.CODE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATE_ACHA_VEHICULE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Vehicule.DATE_ACHA_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DATE_ACHA_VEHICULE\' dans la table \'View_Vehicule\' est " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.DATE_ACHA_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATE_VISITE_VEHICULE {
                get {
                    return ((global::System.DateTime)(this[this.tableView_Vehicule.DATE_VISITE_VEHICULEColumn]));
                }
                set {
                    this[this.tableView_Vehicule.DATE_VISITE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IMMATRICULATION_VEHICULE {
                get {
                    return ((string)(this[this.tableView_Vehicule.IMMATRICULATION_VEHICULEColumn]));
                }
                set {
                    this[this.tableView_Vehicule.IMMATRICULATION_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CARTE_GRISE_VEHICULE {
                get {
                    return ((string)(this[this.tableView_Vehicule.CARTE_GRISE_VEHICULEColumn]));
                }
                set {
                    this[this.tableView_Vehicule.CARTE_GRISE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PRIX_VEHICULE {
                get {
                    return ((decimal)(this[this.tableView_Vehicule.PRIX_VEHICULEColumn]));
                }
                set {
                    this[this.tableView_Vehicule.PRIX_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TYPEVITESSE_VEHICULE {
                get {
                    return ((string)(this[this.tableView_Vehicule.TYPEVITESSE_VEHICULEColumn]));
                }
                set {
                    this[this.tableView_Vehicule.TYPEVITESSE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TYPE_VEHICULE {
                get {
                    return ((string)(this[this.tableView_Vehicule.TYPE_VEHICULEColumn]));
                }
                set {
                    this[this.tableView_Vehicule.TYPE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ETAT_VEHICULE {
                get {
                    try {
                        return ((string)(this[this.tableView_Vehicule.ETAT_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'ETAT_VEHICULE\' dans la table \'View_Vehicule\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.ETAT_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CORDGPS_VEHICULE {
                get {
                    try {
                        return ((string)(this[this.tableView_Vehicule.CORDGPS_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CORDGPS_VEHICULE\' dans la table \'View_Vehicule\' est DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.CORDGPS_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOTE_VEHICULE {
                get {
                    try {
                        return ((string)(this[this.tableView_Vehicule.NOTE_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NOTE_VEHICULE\' dans la table \'View_Vehicule\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.NOTE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATECREATE_VEHICULE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Vehicule.DATECREATE_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DATECREATE_VEHICULE\' dans la table \'View_Vehicule\' est" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.DATECREATE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string USERCREATE_VEHICULE {
                get {
                    try {
                        return ((string)(this[this.tableView_Vehicule.USERCREATE_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'USERCREATE_VEHICULE\' dans la table \'View_Vehicule\' est" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.USERCREATE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ASSURANCE_VEHICULE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Vehicule.ASSURANCE_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'ASSURANCE_VEHICULE\' dans la table \'View_Vehicule\' est " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.ASSURANCE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string STATUT_VEHICULE {
                get {
                    try {
                        return ((string)(this[this.tableView_Vehicule.STATUT_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'STATUT_VEHICULE\' dans la table \'View_Vehicule\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.STATUT_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SANTE_VEHICULE {
                get {
                    try {
                        return ((string)(this[this.tableView_Vehicule.SANTE_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'SANTE_VEHICULE\' dans la table \'View_Vehicule\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.SANTE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TOTALKILOMETRAGE_VEHICULE {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Vehicule.TOTALKILOMETRAGE_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TOTALKILOMETRAGE_VEHICULE\' dans la table \'View_Vehicul" +
                                "e\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.TOTALKILOMETRAGE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal KILOMETRAGE_VIDENGE_VEHICULE {
                get {
                    try {
                        return ((decimal)(this[this.tableView_Vehicule.KILOMETRAGE_VIDENGE_VEHICULEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'KILOMETRAGE_VIDENGE_VEHICULE\' dans la table \'View_Vehi" +
                                "cule\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.KILOMETRAGE_VIDENGE_VEHICULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DATEMISEENSERVICE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_Vehicule.DATEMISEENSERVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DATEMISEENSERVICE\' dans la table \'View_Vehicule\' est D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.DATEMISEENSERVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MODELE_MARQ {
                get {
                    try {
                        return ((string)(this[this.tableView_Vehicule.MODELE_MARQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'MODELE_MARQ\' dans la table \'View_Vehicule\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_Vehicule.MODELE_MARQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DESCRIPTION_MARQ {
                get {
                    return ((string)(this[this.tableView_Vehicule.DESCRIPTION_MARQColumn]));
                }
                set {
                    this[this.tableView_Vehicule.DESCRIPTION_MARQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DESCRIPTION_TYPCONSO {
                get {
                    return ((string)(this[this.tableView_Vehicule.DESCRIPTION_TYPCONSOColumn]));
                }
                set {
                    this[this.tableView_Vehicule.DESCRIPTION_TYPCONSOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DESCRIPTION_FOUR {
                get {
                    return ((string)(this[this.tableView_Vehicule.DESCRIPTION_FOURColumn]));
                }
                set {
                    this[this.tableView_Vehicule.DESCRIPTION_FOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDATE_ACHA_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.DATE_ACHA_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDATE_ACHA_VEHICULENull() {
                this[this.tableView_Vehicule.DATE_ACHA_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsETAT_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.ETAT_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetETAT_VEHICULENull() {
                this[this.tableView_Vehicule.ETAT_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCORDGPS_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.CORDGPS_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCORDGPS_VEHICULENull() {
                this[this.tableView_Vehicule.CORDGPS_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNOTE_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.NOTE_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNOTE_VEHICULENull() {
                this[this.tableView_Vehicule.NOTE_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDATECREATE_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.DATECREATE_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDATECREATE_VEHICULENull() {
                this[this.tableView_Vehicule.DATECREATE_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUSERCREATE_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.USERCREATE_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUSERCREATE_VEHICULENull() {
                this[this.tableView_Vehicule.USERCREATE_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsASSURANCE_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.ASSURANCE_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetASSURANCE_VEHICULENull() {
                this[this.tableView_Vehicule.ASSURANCE_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSTATUT_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.STATUT_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSTATUT_VEHICULENull() {
                this[this.tableView_Vehicule.STATUT_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSANTE_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.SANTE_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSANTE_VEHICULENull() {
                this[this.tableView_Vehicule.SANTE_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTOTALKILOMETRAGE_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.TOTALKILOMETRAGE_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTOTALKILOMETRAGE_VEHICULENull() {
                this[this.tableView_Vehicule.TOTALKILOMETRAGE_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKILOMETRAGE_VIDENGE_VEHICULENull() {
                return this.IsNull(this.tableView_Vehicule.KILOMETRAGE_VIDENGE_VEHICULEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKILOMETRAGE_VIDENGE_VEHICULENull() {
                this[this.tableView_Vehicule.KILOMETRAGE_VIDENGE_VEHICULEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDATEMISEENSERVICENull() {
                return this.IsNull(this.tableView_Vehicule.DATEMISEENSERVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDATEMISEENSERVICENull() {
                this[this.tableView_Vehicule.DATEMISEENSERVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMODELE_MARQNull() {
                return this.IsNull(this.tableView_Vehicule.MODELE_MARQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMODELE_MARQNull() {
                this[this.tableView_Vehicule.MODELE_MARQColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class View_VehiculeRowChangeEvent : global::System.EventArgs {
            
            private View_VehiculeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public View_VehiculeRowChangeEvent(View_VehiculeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public View_VehiculeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GestPark.Models.Data.GestParkDataSetListCarTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_VehiculeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public View_VehiculeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Vehicule";
            tableMapping.ColumnMappings.Add("CODE_VEHICULE", "CODE_VEHICULE");
            tableMapping.ColumnMappings.Add("DATE_ACHA_VEHICULE", "DATE_ACHA_VEHICULE");
            tableMapping.ColumnMappings.Add("DATE_VISITE_VEHICULE", "DATE_VISITE_VEHICULE");
            tableMapping.ColumnMappings.Add("IMMATRICULATION_VEHICULE", "IMMATRICULATION_VEHICULE");
            tableMapping.ColumnMappings.Add("CARTE_GRISE_VEHICULE", "CARTE_GRISE_VEHICULE");
            tableMapping.ColumnMappings.Add("PRIX_VEHICULE", "PRIX_VEHICULE");
            tableMapping.ColumnMappings.Add("TYPEVITESSE_VEHICULE", "TYPEVITESSE_VEHICULE");
            tableMapping.ColumnMappings.Add("TYPE_VEHICULE", "TYPE_VEHICULE");
            tableMapping.ColumnMappings.Add("ETAT_VEHICULE", "ETAT_VEHICULE");
            tableMapping.ColumnMappings.Add("CORDGPS_VEHICULE", "CORDGPS_VEHICULE");
            tableMapping.ColumnMappings.Add("NOTE_VEHICULE", "NOTE_VEHICULE");
            tableMapping.ColumnMappings.Add("DATECREATE_VEHICULE", "DATECREATE_VEHICULE");
            tableMapping.ColumnMappings.Add("USERCREATE_VEHICULE", "USERCREATE_VEHICULE");
            tableMapping.ColumnMappings.Add("ASSURANCE_VEHICULE", "ASSURANCE_VEHICULE");
            tableMapping.ColumnMappings.Add("STATUT_VEHICULE", "STATUT_VEHICULE");
            tableMapping.ColumnMappings.Add("SANTE_VEHICULE", "SANTE_VEHICULE");
            tableMapping.ColumnMappings.Add("TOTALKILOMETRAGE_VEHICULE", "TOTALKILOMETRAGE_VEHICULE");
            tableMapping.ColumnMappings.Add("KILOMETRAGE_VIDENGE_VEHICULE", "KILOMETRAGE_VIDENGE_VEHICULE");
            tableMapping.ColumnMappings.Add("DATEMISEENSERVICE", "DATEMISEENSERVICE");
            tableMapping.ColumnMappings.Add("MODELE_MARQ", "MODELE_MARQ");
            tableMapping.ColumnMappings.Add("DESCRIPTION_MARQ", "DESCRIPTION_MARQ");
            tableMapping.ColumnMappings.Add("DESCRIPTION_TYPCONSO", "DESCRIPTION_TYPCONSO");
            tableMapping.ColumnMappings.Add("DESCRIPTION_FOUR", "DESCRIPTION_FOUR");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GestPark.Properties.Settings.Default.GestParkConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CODE_VEHICULE, DATE_ACHA_VEHICULE, DATE_VISITE_VEHICULE, IMMATRICULATION_VEHICULE, CARTE_GRISE_VEHICULE, PRIX_VEHICULE, TYPEVITESSE_VEHICULE, TYPE_VEHICULE, ETAT_VEHICULE, CORDGPS_VEHICULE, NOTE_VEHICULE, DATECREATE_VEHICULE, USERCREATE_VEHICULE, ASSURANCE_VEHICULE, STATUT_VEHICULE, SANTE_VEHICULE, TOTALKILOMETRAGE_VEHICULE, KILOMETRAGE_VIDENGE_VEHICULE, DATEMISEENSERVICE, MODELE_MARQ, DESCRIPTION_MARQ, DESCRIPTION_TYPCONSO, DESCRIPTION_FOUR FROM dbo.View_Vehicule";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GestParkDataSetListCar.View_VehiculeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GestParkDataSetListCar.View_VehiculeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GestParkDataSetListCar.View_VehiculeDataTable dataTable = new GestParkDataSetListCar.View_VehiculeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(GestParkDataSetListCar dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(GestParkDataSetListCar dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(GestParkDataSetListCar dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(GestParkDataSetListCar dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager ne contient pas d\'informations de connexion. Définissez chaqu" +
                        "e propriété TableAdapterManager TableAdapter à une instance valide de TableAdapt" +
                        "er.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transaction ne peut pas commencer. La connexion de données actuelle ne prend p" +
                        "as en charge les transactions ou l\'état actuel n\'autorise pas le début de la tra" +
                        "nsaction.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591